{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useFetchList.js","components/anime/AnimeCard.js","components/anime/AnimeList.js","components/anime/SearchAnime.js","components/anime/AnimeListScreen.js","hooks/useFetchOne.js","components/shared/SeparateByCommas.js","components/anime/AnimeInfo.js","components/shared/BackButton.js","components/shared/Background.js","components/shared/Popularity.js","components/shared/Related.js","components/shared/Synopsis.js","helpers/formatString.js","components/anime/AnimeScreen.js","components/manga/MangaCard.js","components/manga/MangaList.js","components/manga/SearchManga.js","components/manga/MangaListScreen.js","components/manga/MangaInfo.js","components/manga/MangaScreen.js","routes/Navbar.js","routes/AppRouter.js","App.js","index.js"],"names":["useLocalStorage","key","defaultValue","useState","saved","localStorage","getItem","JSON","parse","getStorageValue","storedValue","setStoredValue","useEffect","setItem","stringify","BASE_URL","useFetchList","url","page","term","values","setValues","controller","AbortController","a","fetch","signal","response","json","data","results","fetchList","abort","AnimeCard","image_url","mal_id","synopsis","title","className","src","alt","to","AnimeList","encodeURIComponent","animeList","length","map","anime","SearchAnime","setPage","setTerm","value","setValue","onSubmit","e","preventDefault","trim","name","onChange","target","autoComplete","placeholder","autoFocus","AnimeListScreen","initialPage","initialTerm","onClick","newPage","useFetchOne","id","console","log","fetchOne","SeparateByCommas","list","i","type","AnimeInfo","aired","duration","episodes","status","studios","themes","string","BackButton","path","history","useHistory","push","Background","background","Popularity","members","popularity","rank","score","Related","related","Object","entries","items","Synopsis","formatString","join","AnimeScreen","animeId","useParams","genres","rating","prop","from","year","MangaCard","MangaList","mangaList","SearchManga","MangaListScreen","MangaInfo","authors","chapters","published","serializations","volumes","MangaScreen","mangaId","manga","Navbar","activeClassName","exact","AppRouter","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bae9d464.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction getStorageValue(key, defaultValue) {\r\n\r\n  const saved = localStorage.getItem(key);\r\n  const initial = JSON.parse(saved);\r\n  \r\n  return initial || defaultValue;\r\n\r\n}\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n\r\n  const [ storedValue, setStoredValue ] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(storedValue));\r\n  }, [ key, storedValue ]);\r\n\r\n  return [ storedValue, setStoredValue ];\r\n\r\n};\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst BASE_URL = 'https://api.jikan.moe/v3';\r\n\r\nexport const useFetchList = (url, { page, term }) => {\r\n  \r\n  const [ values, setValues ] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    let controller = new AbortController();\r\n\r\n    async function fetchList() {\r\n\r\n      try {\r\n        \r\n        const response = await fetch(\r\n          `${ BASE_URL }${ url }`, {\r\n            signal: controller.signal\r\n          });\r\n        const data = await response.json();\r\n  \r\n        setValues([ ...data.results ]);\r\n        controller = null;\r\n\r\n      } catch (error) { }\r\n\r\n    }\r\n\r\n    fetchList();\r\n\r\n    return () => controller?.abort();\r\n\r\n  }, [ url, page, term ]);\r\n\r\n  return [ values ];\r\n\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport const AnimeCard = ({\r\n  image_url,\r\n  mal_id,\r\n  synopsis,\r\n  title,\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"card\">\r\n        <img src={ image_url } className=\"card-img-top\" alt={ title } />\r\n\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{ title }</h5>\r\n          <p className=\"card-text\">{ synopsis }</p>\r\n        </div>\r\n\r\n        <Link\r\n          className=\"btn btn-outline-primary\"\r\n          to={ `/anime/${ mal_id }` }\r\n        >\r\n          See more...\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { useFetchList } from '../../hooks/useFetchList';\r\nimport { AnimeCard } from './AnimeCard';\r\n\r\nexport function AnimeList({ page, term }) {\r\n\r\n  const [ animeList ] = useFetchList(\r\n    `/search/anime?q=${ encodeURIComponent(term) }&order_by=title&sort=asc&page=${ page }`,\r\n    { page, term }\r\n  );\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4\">\r\n      { animeList.length > 0 &&\r\n        animeList.map(anime => (\r\n          <AnimeCard\r\n            key={ anime.mal_id }\r\n            { ...anime }\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const SearchAnime = ({ setPage, setTerm, storedValue, setStoredValue }) => {\r\n\r\n  const [ value, setValue ] = useState(storedValue.term);\r\n\r\n  const handleValue = ({ target }) => {\r\n    setValue(target.value);\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim() === '' || value.trim().length >= 3) {\r\n      setPage(1);\r\n      setTerm(value);\r\n      setStoredValue({ page: 1, term: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <form \r\n      className=\"my-3\"\r\n      onSubmit={ handleSubmit }\r\n    >\r\n      <input\r\n        className=\"form-control\"\r\n        name=\"searchAnime\"\r\n        value={ value }\r\n        onChange={ handleValue }\r\n        autoComplete=\"off\"\r\n        placeholder=\"Search anime\"\r\n        autoFocus\r\n      />\r\n    </form>\r\n\r\n  );\r\n\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\r\nimport { AnimeList } from './AnimeList';\r\nimport { SearchAnime } from './SearchAnime';\r\n\r\nexport const AnimeListScreen = () => {\r\n  \r\n  const [ storedValue, setStoredValue ] = useLocalStorage('animeParams', { page: 1, term: '' });\r\n  const { page: initialPage, term: initialTerm } = storedValue;\r\n  const [ page, setPage ] = useState( initialPage );\r\n  const [ , setTerm ] = useState( initialTerm );\r\n\r\n  const handleLoadLess = () => {\r\n    const newPage = page - 1 === 0 ? 1 : page - 1;\r\n    setPage(newPage);\r\n    setStoredValue({ ...storedValue, page: newPage });\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(page + 1);\r\n    setStoredValue({ ...storedValue, page: page + 1 });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Anime</h2>\r\n\r\n      <SearchAnime\r\n        setPage={ setPage }\r\n        setTerm={ setTerm }\r\n        storedValue={ storedValue }\r\n        setStoredValue={ setStoredValue }\r\n      />\r\n\r\n      <div className=\"row my-3\">\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn w-100 btn-danger\"\r\n            onClick={ handleLoadLess }\r\n          >\r\n            Load less\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn w-100 btn-success\"\r\n            onClick={ handleLoadMore }\r\n          >\r\n            Load more\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <AnimeList\r\n        page={ initialPage }\r\n        term={ initialTerm }\r\n      />\r\n    </>\r\n  );\r\n\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst BASE_URL = 'https://api.jikan.moe/v3';\r\n\r\nexport const useFetchOne = (url, id) => {\r\n\r\n  const [ value, setValue ] = useState({});\r\n\r\n  useEffect(() => {\r\n\r\n    let controller = new AbortController();\r\n\r\n    async function fetchOne() {\r\n      try {\r\n\r\n        const response = await fetch(\r\n          `${ BASE_URL }${ url }`, {\r\n            signal: controller.signal\r\n          }\r\n        );\r\n        const data = await response.json();\r\n\r\n        console.log(data)\r\n\r\n        setValue(data);\r\n        controller = null;\r\n\r\n      } catch (error) { }\r\n    }\r\n\r\n    fetchOne();\r\n\r\n    return () => controller?.abort();\r\n\r\n  }, [ url, id ]);\r\n\r\n  return [ value ];\r\n\r\n};\r\n","export const SeparateByCommas = ({ list = [] }) => {\r\n\r\n  const generateLinks = () => {\r\n    return list.map(({ mal_id, name  }, i) => (\r\n      <button\r\n        key={ mal_id }\r\n        type=\"button\"\r\n        className=\"btn btn-sm btn-link p-0\"\r\n      >\r\n        { i !== list.length - 1 ? `${ name },` : name }\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      { generateLinks() }\r\n    </>\r\n  );\r\n\r\n};\r\n","import { SeparateByCommas } from '../shared/SeparateByCommas';\r\n\r\nexport const AnimeInfo = ({\r\n  aired,\r\n  duration,\r\n  episodes,\r\n  status,\r\n  studios = [],\r\n  themes = [],\r\n  type\r\n}) => {\r\n  \r\n  return (\r\n    <>\r\n      <h6>Information</h6>\r\n\r\n      <p className=\"mb-1\">\r\n        <strong>Type: </strong>{ type }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Episodes: </strong>{ episodes }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Status: </strong>{ status }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Aired: </strong>{ aired?.string }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Studios: </strong>\r\n        <SeparateByCommas list={ studios } />\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Theme: </strong>\r\n        <SeparateByCommas list={ themes } />\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Duration: </strong>{ duration }\r\n      </p> \r\n    </>\r\n  );\r\n  \r\n};\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nexport const BackButton = ({ path }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleBack = () => {\r\n    history.push(`/${ path }`);\r\n  };\r\n\r\n  return (\r\n    <button \r\n      className=\"btn btn-danger w-100 mt-3\"\r\n      onClick={ handleBack }\r\n    >\r\n      Back\r\n    </button>\r\n  );\r\n\r\n};\r\n","import React from 'react'\r\n\r\nexport const Background = ({ background }) => {\r\n  return (\r\n    <>\r\n      <h5>Background</h5>\r\n      <hr />\r\n      <p>{ background }</p> \r\n    </>\r\n  )\r\n}\r\n","export const Popularity = ({ members, popularity, rank, score }) => {\r\n\r\n  return (\r\n    <div className=\"row my-3\">\r\n      <div className=\"d-flex flex-column align-items-center col-2\">\r\n        <button className=\"btn btn-sm btn-primary\">Score</button>\r\n        <strong>{ score }</strong>\r\n      </div>\r\n      \r\n      <div className=\"col-3\">\r\n        <p>Ranked <strong>#{ rank }</strong></p>\r\n      </div>\r\n\r\n      <div className=\"col-3\">\r\n        <p>Popularity <strong>#{ popularity }</strong></p>\r\n      </div>\r\n\r\n      <div className=\"col-4\">\r\n        <p>Members <strong>#{ members }</strong></p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { SeparateByCommas } from \"./SeparateByCommas\";\r\n\r\nexport const Related = ({ title, related = {} }) => {\r\n\r\n  return (\r\n    <div>\r\n      <h5>Related { title }</h5>\r\n      <hr />\r\n\r\n      <table className=\"table table-sm\">\r\n      <tbody>\r\n        {\r\n           Object.entries( related ).map(([ name, items ], i) => (\r\n            <tr key={ i } >\r\n              <th>{ name }</th>\r\n              <td>\r\n                <SeparateByCommas list={ items } />\r\n              </td>\r\n            </tr>\r\n           ))\r\n        }\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n};\r\n","export const Synopsis = ({ synopsis }) => {\r\n\r\n  return (\r\n    <>\r\n      <h5>Synopsis</h5>\r\n      <hr />\r\n      <p>{ synopsis }</p>\r\n    </>\r\n  );\r\n\r\n};\r\n","export const formatString = (list) => {\r\n  return list.map(({ name }) => name).join(',');\r\n};\r\n","import { useParams } from 'react-router-dom';\r\n\r\nimport { useFetchOne } from '../../hooks/useFetchOne';\r\nimport { AnimeInfo } from './AnimeInfo';\r\nimport { BackButton } from '../shared/BackButton';\r\nimport { Background } from '../shared/Background';\r\nimport { Popularity } from '../shared/Popularity';\r\nimport { Related } from '../shared/Related';\r\nimport { Synopsis } from '../shared/Synopsis';\r\nimport { formatString } from '../../helpers/formatString';\r\n\r\nexport const AnimeScreen = () => {\r\n  \r\n  const { animeId } = useParams();\r\n  const [ anime ] =  useFetchOne(`/anime/${ animeId }`, animeId);\r\n  const {\r\n    aired,\r\n    background,\r\n    genres = [],\r\n    image_url,\r\n    rating,\r\n    related,\r\n    synopsis,\r\n    title,\r\n  } = anime;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-3\">\r\n          <img src={ image_url } className=\"card-img-top\" alt={ title } />\r\n\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n              <AnimeInfo { ...anime } />\r\n            </div>\r\n          </div>\r\n\r\n          <BackButton path=\"anime\" />\r\n        </div>\r\n\r\n        <div className=\"col-9\">\r\n          <h3>{ title } <span>({ aired?.prop.from.year })</span> </h3>\r\n\r\n          <p>\r\n            <span>{ rating }</span> &#8226; <span>{ formatString( genres ) }</span>\r\n          </p>\r\n\r\n          <Popularity { ...anime } />\r\n\r\n          <Synopsis synopsis={ synopsis } />\r\n\r\n          <Background background={ background } />\r\n\r\n          <Related title=\"Anime\" related={ related } />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport const MangaCard = ({\r\n  image_url,\r\n  mal_id,\r\n  synopsis,\r\n  title,\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"card\">\r\n        <img src={ image_url } className=\"card-img-top\" alt={ title } />\r\n\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{ title }</h5>\r\n          <p className=\"card-text\">{ synopsis }</p>\r\n        </div>\r\n\r\n        <Link\r\n          className=\"btn btn-outline-primary\"\r\n          to={ `/manga/${ mal_id }` }\r\n        >\r\n          See more...\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { useFetchList } from '../../hooks/useFetchList';\r\nimport { MangaCard } from './MangaCard';\r\n\r\nexport function MangaList({ page, term }) {\r\n\r\n  const [ mangaList ] = useFetchList(\r\n    `/search/manga?q=${ encodeURIComponent(term) }&order_by=title&sort=asc&page=${ page }`,\r\n    { page, term }\r\n  );\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4\">\r\n      { mangaList.length > 0 &&\r\n        mangaList.map(anime => (\r\n          <MangaCard\r\n            key={ anime.mal_id }\r\n            { ...anime }\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const SearchManga = ({ setPage, setTerm, storedValue, setStoredValue }) => {\r\n\r\n  const [ value, setValue ] = useState(storedValue.term);\r\n\r\n  const handleValue = ({ target }) => {\r\n    setValue(target.value);\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim() === '' || value.trim().length >= 3) {\r\n      setPage(1);\r\n      setTerm(value);\r\n      setStoredValue({ page: 1, term: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <form \r\n      className=\"my-3\"\r\n      onSubmit={ handleSubmit }\r\n    >\r\n      <input\r\n        className=\"form-control\"\r\n        name=\"searchManga\"\r\n        value={ value }\r\n        onChange={ handleValue }\r\n        autoComplete=\"off\"\r\n        placeholder=\"Search manga\"\r\n        autoFocus\r\n      />\r\n    </form>\r\n\r\n  );\r\n\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\r\nimport { MangaList } from './MangaList';\r\nimport { SearchManga } from './SearchManga';\r\n\r\nexport const MangaListScreen = () => {\r\n  \r\n  const [ storedValue, setStoredValue ] = useLocalStorage('mangaParams', { page: 1, term: '' });\r\n  const { page: initialPage, term: initialTerm } = storedValue;\r\n  const [ page, setPage ] = useState( initialPage );\r\n  const [ , setTerm ] = useState( initialTerm );\r\n\r\n  const handleLoadLess = () => {\r\n    const newPage = page - 1 === 0 ? 1 : page - 1;\r\n    setPage(newPage);\r\n    setStoredValue({ ...storedValue, page: newPage });\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(page + 1);\r\n    setStoredValue({ ...storedValue, page: page + 1 });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manga</h2>\r\n\r\n      <SearchManga\r\n        setPage={ setPage }\r\n        setTerm={ setTerm }\r\n        storedValue={ storedValue }\r\n        setStoredValue={ setStoredValue }\r\n      />\r\n\r\n      <div className=\"row my-3\">\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn w-100 btn-danger\"\r\n            onClick={ handleLoadLess }\r\n          >\r\n            Load less\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn w-100 btn-success\"\r\n            onClick={ handleLoadMore }\r\n          >\r\n            Load more\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <MangaList\r\n        page={ initialPage }\r\n        term={ initialTerm }\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n","import { SeparateByCommas } from '../../components/shared/SeparateByCommas';\r\n\r\nexport const MangaInfo = ({\r\n  authors = [],\r\n  chapters,\r\n  genres = [],\r\n  published,\r\n  serializations = [],\r\n  status,\r\n  themes = [],\r\n  type,\r\n  volumes,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <h6>Information</h6>\r\n\r\n      <p className=\"mb-1\">\r\n        <strong>Type: </strong>{ type }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Chapters: </strong>{ chapters }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Volumens: </strong>{ volumes || 0 }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Status: </strong>{ status }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Published: </strong>{ published?.string }\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Genres: </strong>\r\n        <SeparateByCommas list={ genres }/>\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Theme: </strong>\r\n        <SeparateByCommas list={ themes } />\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Serialization: </strong>\r\n        <SeparateByCommas list={ serializations } />\r\n      </p>\r\n      <p className=\"mb-1\">\r\n        <strong>Authors: </strong>\r\n        <SeparateByCommas list={ authors } />\r\n      </p>\r\n    </>\r\n  );\r\n\r\n};\r\n","import { useParams } from 'react-router-dom';\r\n\r\nimport { useFetchOne } from '../../hooks/useFetchOne';\r\nimport { MangaInfo } from './MangaInfo';\r\nimport { BackButton } from '../shared/BackButton';\r\nimport { Background } from '../shared/Background';\r\nimport { Popularity } from '../shared/Popularity';\r\nimport { Related } from '../shared/Related';\r\nimport { Synopsis } from '../shared/Synopsis';\r\nimport { formatString } from '../../helpers/formatString';\r\n\r\nexport const MangaScreen = () => {\r\n\r\n  const { mangaId } = useParams();\r\n  const [ manga ] =  useFetchOne(`/manga/${ mangaId }`, mangaId);\r\n  const {\r\n    background,\r\n    genres = [],\r\n    image_url,\r\n    published,\r\n    related,\r\n    title,\r\n    synopsis,\r\n  } = manga;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-3\">\r\n          <img src={ image_url } className=\"card-img-top\" alt={ title } />\r\n\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n              <MangaInfo { ...manga } />\r\n            </div>\r\n          </div>\r\n\r\n          <BackButton path=\"manga\" />\r\n        </div>\r\n\r\n        <div className=\"col-9\">\r\n          <h3>{ title } <span>({ published?.prop.from.year })</span> </h3>\r\n\r\n          <p>\r\n            <span>{ formatString( genres ) }</span>\r\n          </p>\r\n\r\n          <Popularity { ...manga } />\r\n\r\n          <Synopsis synopsis={ synopsis } />\r\n\r\n          <Background background={ background } />\r\n\r\n          <Related  title=\"Manga\" related={ related } />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <NavLink\r\n          activeClassName=\"active\"\r\n          className=\"navbar-brand\"\r\n          to=\"/\"\r\n          exact\r\n        >\r\n          AnimeWorld\r\n        </NavLink>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink\r\n              activeClassName=\"active\"\r\n              className=\"nav-link\"\r\n              to=\"/anime\"\r\n              exact\r\n            >\r\n              Anime\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              activeClassName=\"active\"\r\n              className=\"nav-link\"\r\n              to=\"/manga\"\r\n              exact\r\n            >\r\n              Manga\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n\r\n};\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { AnimeListScreen } from '../components/anime/AnimeListScreen';\r\nimport { AnimeScreen } from '../components/anime/AnimeScreen';\r\nimport { MangaListScreen } from '../components/manga/MangaListScreen';\r\nimport { MangaScreen } from '../components/manga/MangaScreen';\r\nimport { Navbar } from './Navbar';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Navbar />\r\n      \r\n      <div className=\"container my-3\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/anime\"\r\n            component={ AnimeListScreen }\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/anime/:animeId\"\r\n            component={ AnimeScreen }\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/manga\"\r\n            component={ MangaListScreen }\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/manga/:mangaId\"\r\n            component={ MangaScreen }\r\n            exact\r\n          />\r\n\r\n          <Redirect to=\"/anime\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n\r\n};\r\n","import { AppRouter } from './routes/AppRouter';\n\nexport function App() {\n  \n  return (\n    <AppRouter />\n  );\n\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}